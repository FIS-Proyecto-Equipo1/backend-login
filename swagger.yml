swagger: "2.0"
info:
  description: "Definición del servicio de autenticación"
  version: "1.0.0"
  title: "Servicio de autenticación"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "backend-login-e1.herokuapp.com"
basePath: "/api/v1"
tags:
- name: "Auth"
  description: "Gestión de la autenticación"
- name: "Usuarios"
  description: "Operaciones sobre usuarios"
schemes:

- "http"
paths:
  /login:
    post:
      tags:
      - "Auth"
      summary: "Login en la aplicación"
      description: ""
      operationId: "userLogin"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Pet object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/LoginVM"
      responses:
        "200":
          description: "Operación satisfactoria"
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: "Invalid username/password"
  /register:
    post:
      tags:
      - "Auth"
      summary: "Registro en la aplicación"
      description: ""
      operationId: "userRegister"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Pet object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        "200":
          description: "Operación satisfactoria"
          schema:
            $ref: "#/definitions/User"
        "400":
          description: "Error de validación"


  /user:
    get:
      tags:
      - "Usuarios"
      summary: "Obtener usuario logado con token"
      description: "This can only be done by the logged in user."
      operationId: "listUsers"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "Authorization"
        description: "Identificador del usuario"
        required: true
        type: string
      responses:
        "200":
          description: "Operación satisfactoria"
          schema:
            $ref: "#/definitions/User"
        "401":
          description: "No autorizado"
  /user/{id}:
    get:
      tags:
      - "Usuarios"
      summary: "Obtener usuario"
      description: "This can only be done by the logged in user."
      operationId: "getUser"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "id"
        description: "Identificador del usuario"
        required: true
        type: string
      responses:
        "200":
          description: "Operación satisfactoria"
          schema:
            $ref: "#/definitions/User"
  

definitions:
  LoginVM:
    type: "object"
    properties:
      username:
        type: "string"
      password:
        type: "string"
  LoginResponse:
    type: "object"
    properties:
      token:
        type: "string"
      rol:
        type: "string"
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      nombre:
        type: "string"
      apellido:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      telefono:
        type: "string"
      cuentaBancaria:
        type: "string"

   